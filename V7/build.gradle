apply plugin: 'eclipse'
apply plugin: 'java'


project.ext.set('guiceVersion','3.0')
project.ext.set('orientVersion','1.4.0')
project.ext.set('shiroVersion','1.2.1')
project.ext.set('tinkerVersion', '2.3.0')
project.ext.set('vaadinVersion', '7.1.5')




repositories { mavenCentral() }

configurations { providedCompile }

sourceSets.main.compileClasspath += configurations.providedCompile
sourceSets.test.compileClasspath += configurations.providedCompile
sourceSets.test.runtimeClasspath += configurations.providedCompile


dependencies{

	//Persistence
	//see http://code.google.com/p/orient/wiki/JavaAPI#Database_types and http://code.google.com/p/orient/wiki/GraphDatabaseTinkerpop

	compile 'javax.persistence:persistence-api:1.0.2'
	compile 'com.orientechnologies:orientdb-core:'+orientVersion
	compile 'com.orientechnologies:orient-commons:'+orientVersion

	compile 'com.orientechnologies:orientdb-client:'+orientVersion //needed for remote server
	compile 'com.orientechnologies:orientdb-enterprise:'+orientVersion //needed for remote server


	compile 'com.tinkerpop.blueprints:blueprints-core:'+tinkerVersion   //Graph Persistence
	compile 'com.tinkerpop.blueprints:blueprints-orient-graph:'+tinkerVersion  //Graph Persistence


	compile 'com.orientechnologies:orientdb-object:'+orientVersion//Object persistence



	//Vaadin

	//The core server part of Vaadin -->
	compile 'com.vaadin:vaadin-server:'+vaadinVersion






	//User access control
	compile 'org.apache.shiro:shiro-core:'+shiroVersion
	compile 'org.apache.shiro:shiro-web:'+shiroVersion
	compile 'org.apache.shiro:shiro-guice:'+shiroVersion

	//Logging
	compile 'org.slf4j:slf4j-api:1.6.6'
	compile 'org.slf4j:slf4j-log4j12:1.6.6'



	//Testing
	testCompile 'org.easytesting:fest-assert:1.4'
	testCompile 'com.googlecode.jmockit:jmockit:1.0'

	//Date Time
	compile 'joda-time:joda-time:2.1'

	//Money
	compile 'org.joda:joda-money:0.8'

	//Validation
	compile 'org.apache.bval:bval-jsr303:0.5'
	compile 'org.apache.bval:bval-guice:0.5'
	compile 'javax.validation:validation-api:1.0.0.GA'


	//Utility
	compile 'com.google.guava:guava:13.0.1'
	//the easiest way to all the Jung parts
	compile 'net.sf.jung:jung-samples:2.0.1'
	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'commons-io:commons-io:2.4'

	//servlet
	compile "javax.servlet:javax.servlet-api:3.+"


//	test.testLogging.showStandardStreams = true
	test{ exclude '**/GuiceServletInjectorTest.class' }




}